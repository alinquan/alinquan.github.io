import{_ as s,c as a,o as n,X as e}from"./chunks/framework.402b02fe.js";const o="/assets/image-1.b758a638.png",t="/assets/image-2.795d76f1.png",l="/assets/image-3.e016004f.png",p="/assets/image-4.05f4414d.png",m=JSON.parse('{"title":"开发环境调试 JSSDK","description":"","frontmatter":{},"headers":[],"relativePath":"essay/开发环境调试JSSDK.md","filePath":"essay/开发环境调试JSSDK.md"}'),r={name:"essay/开发环境调试JSSDK.md"},c=e(`<h1 id="开发环境调试-jssdk" tabindex="-1">开发环境调试 JSSDK <a class="header-anchor" href="#开发环境调试-jssdk" aria-label="Permalink to &quot;开发环境调试 JSSDK&quot;">​</a></h1><h2 id="概述" tabindex="-1">概述 <a class="header-anchor" href="#概述" aria-label="Permalink to &quot;概述&quot;">​</a></h2><p>微信 JS-SDK 是 <a href="https://mp.weixin.qq.com/cgi-bin/loginpage?t=wxm2-login&amp;lang=zh_CN" target="_blank" rel="noreferrer">微信公众平台</a> 面向网页开发者提供的基于微信内的网页开发工具包。<br> 通过使用微信 JS-SDK，网页开发者可借助微信高效地使用拍照、选图、语音、位置等手机系统的能力，同时可以直接使用微信分享、扫一扫、卡券、支付等微信特有的能力，为微信用户提供更优质的网页体验。</p><h2 id="使用步骤" tabindex="-1">使用步骤 <a class="header-anchor" href="#使用步骤" aria-label="Permalink to &quot;使用步骤&quot;">​</a></h2><h3 id="步骤一-绑定域名" tabindex="-1">步骤一：绑定域名 <a class="header-anchor" href="#步骤一-绑定域名" aria-label="Permalink to &quot;步骤一：绑定域名&quot;">​</a></h3><p>先登录微信公众平台进入“公众号设置”的“功能设置”里填写“JS 接口安全域名”。<br> 备注：登录后可在“开发者中心”查看对应的接口权限。</p><h3 id="步骤二-引入-js-文件" tabindex="-1">步骤二：引入 JS 文件 <a class="header-anchor" href="#步骤二-引入-js-文件" aria-label="Permalink to &quot;步骤二：引入 JS 文件&quot;">​</a></h3><p>在需要调用 JS 接口的页面引入如下 JS 文件，（支持 https）：<a href="http://res.wx.qq.com/open/js/jweixin-1.6.0.js" target="_blank" rel="noreferrer">http://res.wx.qq.com/open/js/jweixin-1.6.0.js</a><br> 如需进一步提升服务稳定性，当上述资源不可访问时，可改访问：<a href="http://res2.wx.qq.com/open/js/jweixin-1.6.0.js" target="_blank" rel="noreferrer">http://res2.wx.qq.com/open/js/jweixin-1.6.0.js</a> （支持 https）。<br> 备注：支持使用 AMD/CMD 标准模块加载方法加载</p><h3 id="步骤三-通过-config-接口注入权限验证配置" tabindex="-1">步骤三：通过 config 接口注入权限验证配置 <a class="header-anchor" href="#步骤三-通过-config-接口注入权限验证配置" aria-label="Permalink to &quot;步骤三：通过 config 接口注入权限验证配置&quot;">​</a></h3><p>所有需要使用 JS-SDK 的页面必须先注入配置信息，否则将无法调用（同一个 url 仅需调用一次，对于变化 url 的 SPA 的 web app 可在每次 url 变化时进行调用,目前 Android 微信客户端不支持 pushState 的 H5 新特性，所以使用 pushState 来实现 web app 的页面会导致签名失败，此问题会在 Android6.2 中修复）。</p><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#BABED8;">wx</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">config</span><span style="color:#BABED8;">(</span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#BABED8;">  </span><span style="color:#F07178;">debug</span><span style="color:#89DDFF;">:</span><span style="color:#BABED8;"> </span><span style="color:#FF9CAC;">true</span><span style="color:#89DDFF;">,</span><span style="color:#BABED8;"> </span><span style="color:#676E95;font-style:italic;">// 开启调试模式,调用的所有api的返回值会在客户端alert出来，若要查看传入的参数，可以在pc端打开，参数信息会通过log打出，仅在pc端时才会打印。</span></span>
<span class="line"><span style="color:#BABED8;">  </span><span style="color:#F07178;">appId</span><span style="color:#89DDFF;">:</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">&#39;&#39;</span><span style="color:#89DDFF;">,</span><span style="color:#BABED8;"> </span><span style="color:#676E95;font-style:italic;">// 必填，公众号的唯一标识</span></span>
<span class="line"><span style="color:#BABED8;">  </span><span style="color:#F07178;">timestamp</span><span style="color:#89DDFF;">:</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">,</span><span style="color:#BABED8;"> </span><span style="color:#676E95;font-style:italic;">// 必填，生成签名的时间戳</span></span>
<span class="line"><span style="color:#BABED8;">  </span><span style="color:#F07178;">nonceStr</span><span style="color:#89DDFF;">:</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">&#39;&#39;</span><span style="color:#89DDFF;">,</span><span style="color:#BABED8;"> </span><span style="color:#676E95;font-style:italic;">// 必填，生成签名的随机串</span></span>
<span class="line"><span style="color:#BABED8;">  </span><span style="color:#F07178;">signature</span><span style="color:#89DDFF;">:</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">&#39;&#39;</span><span style="color:#89DDFF;">,</span><span style="color:#676E95;font-style:italic;">// 必填，签名</span></span>
<span class="line"><span style="color:#BABED8;">  </span><span style="color:#F07178;">jsApiList</span><span style="color:#89DDFF;">:</span><span style="color:#BABED8;"> [] </span><span style="color:#676E95;font-style:italic;">// 必填，需要使用的JS接口列表</span></span>
<span class="line"><span style="color:#89DDFF;">}</span><span style="color:#BABED8;">)</span><span style="color:#89DDFF;">;</span></span></code></pre></div><h3 id="步骤四-通过-ready-接口处理成功验证" tabindex="-1">步骤四：通过 ready 接口处理成功验证 <a class="header-anchor" href="#步骤四-通过-ready-接口处理成功验证" aria-label="Permalink to &quot;步骤四：通过 ready 接口处理成功验证&quot;">​</a></h3><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#BABED8;">wx</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">ready</span><span style="color:#BABED8;">(</span><span style="color:#C792EA;">function</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">()</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#89DDFF;">  </span><span style="color:#676E95;font-style:italic;">// config信息验证后会执行ready方法，所有接口调用都必须在config接口获得结果之后，config是一个客户端的异步操作，所以如果需要在页面加载时就调用相关接口，则须把相关接口放在ready函数中调用来确保正确执行。对于用户触发时才调用的接口，则可以直接调用，不需要放在ready函数中。</span></span>
<span class="line"><span style="color:#89DDFF;">}</span><span style="color:#BABED8;">)</span><span style="color:#89DDFF;">;</span></span></code></pre></div><h2 id="开发环境调试" tabindex="-1">开发环境调试 <a class="header-anchor" href="#开发环境调试" aria-label="Permalink to &quot;开发环境调试&quot;">​</a></h2><h3 id="步骤一-绑定域名-1" tabindex="-1">步骤一：绑定域名 <a class="header-anchor" href="#步骤一-绑定域名-1" aria-label="Permalink to &quot;步骤一：绑定域名&quot;">​</a></h3><p>打开 <a href="https://mp.weixin.qq.com/debug/cgi-bin/sandboxinfo?action=showinfo&amp;t=sandbox/index" target="_blank" rel="noreferrer">微信测试号管理平台</a> 扫码登录，找到 JS 接口安全域名修改： <img src="`+o+'" alt="Alt text"> 点击&quot;<strong>修改</strong>&quot;配置本地域名，<strong>不需要添加协议</strong></p><h3 id="步骤二-引入-js-文件-1" tabindex="-1">步骤二：引入 js 文件 <a class="header-anchor" href="#步骤二-引入-js-文件-1" aria-label="Permalink to &quot;步骤二：引入 js 文件&quot;">​</a></h3><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">script</span><span style="color:#89DDFF;"> </span><span style="color:#C792EA;">src</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">http://res.wx.qq.com/open/js/jweixin-1.6.0.js</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">&gt;&lt;/</span><span style="color:#F07178;">script</span><span style="color:#89DDFF;">&gt;</span></span></code></pre></div><h3 id="步骤三-生成-signature-签名" tabindex="-1">步骤三：生成 signature 签名 <a class="header-anchor" href="#步骤三-生成-signature-签名" aria-label="Permalink to &quot;步骤三：生成 signature 签名&quot;">​</a></h3><h4 id="_1-获取-appid-和-appsecret" tabindex="-1">1.获取 appid 和 appsecret <a class="header-anchor" href="#_1-获取-appid-和-appsecret" aria-label="Permalink to &quot;1.获取 appid 和 appsecret&quot;">​</a></h4><p>打开 <a href="https://mp.weixin.qq.com/debug/cgi-bin/sandboxinfo?action=showinfo&amp;t=sandbox/index" target="_blank" rel="noreferrer">微信测试号管理平台</a> 复制 appId 和 appsecret</p><p><img src="'+t+'" alt="Alt text"></p><h4 id="_2-获取-access-token" tabindex="-1">2.获取 access_token <a class="header-anchor" href="#_2-获取-access-token" aria-label="Permalink to &quot;2.获取 access_token&quot;">​</a></h4><p>浏览器直接访问 <a href="https://api.weixin.qq.com/cgi-bin/token?grant_type=client_credential&amp;appid=%E4%BD%A0%E7%9A%84appid&amp;secret=%E4%BD%A0%E7%9A%84appsecret" target="_blank" rel="noreferrer">https://api.weixin.qq.com/cgi-bin/token?grant_type=client_credential&amp;appid=你的appid&amp;secret=你的appsecret</a> 获取 <strong>access_token</strong></p><h4 id="_3-获取-ticket" tabindex="-1">3.获取 ticket <a class="header-anchor" href="#_3-获取-ticket" aria-label="Permalink to &quot;3.获取 ticket&quot;">​</a></h4><p>根据 <strong>access_token</strong> 浏览器直接访问<a href="https://api.weixin.qq.com/cgi-bin/ticket/getticket?access_token=%E4%BD%A0%E7%9A%84access_token&amp;type=jsapi" target="_blank" rel="noreferrer">https://api.weixin.qq.com/cgi-bin/ticket/getticket?access_token=你的access_token&amp;type=jsapi</a> 获取 <strong>ticket</strong></p><h4 id="_4-生成-signature" tabindex="-1">4.生成 signature <a class="header-anchor" href="#_4-生成-signature" aria-label="Permalink to &quot;4.生成 signature&quot;">​</a></h4><p>使用 <a href="https://mp.weixin.qq.com/debug/cgi-bin/sandbox?t=jsapisign" target="_blank" rel="noreferrer">微信 JS 接口签名校验工具</a> 生成 signature <img src="'+l+`" alt="Alt text"> <strong>注意：url 不包含#及其后面部分</strong></p><h3 id="步骤四-通过-config-接口注入权限验证配置" tabindex="-1">步骤四：通过 config 接口注入权限验证配置 <a class="header-anchor" href="#步骤四-通过-config-接口注入权限验证配置" aria-label="Permalink to &quot;步骤四：通过 config 接口注入权限验证配置&quot;">​</a></h3><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#BABED8;">wx</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">config</span><span style="color:#BABED8;">(</span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#BABED8;">  </span><span style="color:#F07178;">debug</span><span style="color:#89DDFF;">:</span><span style="color:#BABED8;"> </span><span style="color:#FF9CAC;">true</span><span style="color:#89DDFF;">,</span><span style="color:#BABED8;"> </span><span style="color:#676E95;font-style:italic;">// 开启调试模式,调用的所有api的返回值会在客户端alert出来，若要查看传入的参数，可以在pc端打开，参数信息会通过log打出，仅在pc端时才会打印。</span></span>
<span class="line"><span style="color:#BABED8;">  </span><span style="color:#F07178;">appId</span><span style="color:#89DDFF;">:</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">测试号的appid</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span><span style="color:#BABED8;"> </span><span style="color:#676E95;font-style:italic;">// 必填，公众号的唯一标识</span></span>
<span class="line"><span style="color:#BABED8;">  </span><span style="color:#F07178;">timestamp</span><span style="color:#89DDFF;">:</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">生成signature时填的timestamp</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span><span style="color:#BABED8;"> </span><span style="color:#676E95;font-style:italic;">// 必填，生成签名的时间戳</span></span>
<span class="line"><span style="color:#BABED8;">  </span><span style="color:#F07178;">nonceStr</span><span style="color:#89DDFF;">:</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">生成signature时填的nonceStr</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span><span style="color:#BABED8;"> </span><span style="color:#676E95;font-style:italic;">// 必填，生成签名的随机串</span></span>
<span class="line"><span style="color:#BABED8;">  </span><span style="color:#F07178;">signature</span><span style="color:#89DDFF;">:</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">生成的signature</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span><span style="color:#BABED8;"> </span><span style="color:#676E95;font-style:italic;">// 必填，签名</span></span>
<span class="line"><span style="color:#BABED8;">  </span><span style="color:#F07178;">jsApiList</span><span style="color:#89DDFF;">:</span><span style="color:#BABED8;"> []</span><span style="color:#89DDFF;">,</span><span style="color:#BABED8;"> </span><span style="color:#676E95;font-style:italic;">// 必填，需要使用的JS接口列表</span></span>
<span class="line"><span style="color:#89DDFF;">}</span><span style="color:#BABED8;">)</span><span style="color:#89DDFF;">;</span></span></code></pre></div><p>微信开发者工具执行上述代码后控制台显示&quot;<strong>config:ok</strong>&quot;就证明成功啦~~ <img src="`+p+'" alt="Alt text"></p>',31),i=[c];function D(y,F,h,d,g,B){return n(),a("div",null,i)}const f=s(r,[["render",D]]);export{m as __pageData,f as default};
